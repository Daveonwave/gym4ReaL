name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags:
      - "v*"
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8 black
      
      - name: Run Linting
        run: |
          black --check .
          flake8 .
      
      - name: Run Tests
        run: pytest tests/

  build:
    name: Build Package
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      
      - name: Install Build Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      
      - name: Build the Package
        run: python -m build
      
      - name: Upload Package Artifact
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: dist/

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      
      - name: Install Twine
        run: pip install twine
      
      - name: Download Package Artifact
        uses: actions/download-artifact@v3
        with:
          name: package
          path: dist/
      
      - name: Publish to PyPI
        env:
          PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/* -u __token__ -p "$PYPI_API_TOKEN"

